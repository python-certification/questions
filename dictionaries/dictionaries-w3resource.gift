What will be the output of the following Python code snippet? 
<br/><code>
x\=\{1\:"P",2\:"Q",3\:"R"\}
del x
</code>
{
~method del doesn't exist for the dictionary
~del deletes the values in the dictionary
=del deletes the entire dictionary
~del deletes the keys in the dictionary
}
 
What will be the output of the following Python code? 
<br/><code>
x\=\{1\:"P",2\:"Q",3\:"R"\}
y\=\{4\:"S",5\:"T"\}
x.update(y)
print(x)
</code>
{
=\{1\: 'P', 2\: 'Q', 3\: 'R', 4\: 'S', 5\: 'T'\}
~Method update() doesn't exist for dictionaries
~\{1\: 'P', 2\: 'Q', 3\: 'R'\}
~\{4\: 'S', 5\: 'T'\}
}

What will be the output of the following Python code? 
<br/><code>
import collections
x\=dict()
x\=collections.defaultdict(int)
print(x[1])
</code>
{
~1
=0
~An exception is thrown
~' '
}
 
What will be the output of the following Python code? 
<br/><code>
import collections
f\=collections.OrderedDict((str(p),p) for p in range(3))
print(f)
</code>
{
~\{'2'\:2, '0'\:0, '1'\:1\}
=OrderedDict([('0', 0), ('1', 1), ('2', 2)])
=An exception is thrown
=' '
}
 
What will be the output of the following Python code? 
<br/><code>
x\=\{"x"\:1,"y"\:2,"z"\:3\}
y\=dict(zip(x.values(),x.keys()))
print(y)
</code>
{
=\{1\: 'x', 2\: 'y', 3\: 'z'\}
~An exception is thrown
~\{'x'\: 'y'\: 'z'\: \}
~\{1\: 'x', 2\: 'y', 3\: 'z'\}
}

What will be the output of the following Python code snippet? 
<br/><code>
total \= \{\}
def insert(items)\:
  if items in total\:
    total[items] +\= 1
  else\:
    total[items] \= 1
insert('Mango')
insert('Pen')
insert('Mango')
print (len(total))
</code>
{
~3
=2
~1
~0
}
 
What will be the output of the following Python code? 
<br/><code>
x\=\{1\:"P",2\:"Q",3\:"R"\}
x.clear()
print(x)
</code>
{
~None
~\{ None\:None, None\:None, None\:None\}
~\{1\:None, 2\:None, 3\:None\}
=\{ \}
}
 
What will be the output of the following Python code snippet? 
<br/><code>
import collections
x\=collections.Counter([3,3,4,4,4,5])
x\=collections.Counter([3,3,4,5,5])
print(x|y)
</code>
{
~Counter(\{4\: 4, 3\: 3, 5\: 3\})
=Counter(\{4\: 3, 3\: 2, 5\: 2\})
~Counter(\{4\: 3\})
~Counter(\{5\: 3\})
}

What will be the output of the following Python code snippet? 
<br/><code>
f\=\{1\:"P",2\:"Q",3\:"R"\}
f.setdefault(4,"S")
print(f)
</code>
{
=\{1\: 'P', 2\: 'Q', 3\: 'R', 4\: 'S'\}
~Error
~None
~[1,2,3,4]
}

Which of the statements about dictionary values if false? 
{
~More than one key can have the same value 
~The values of the dictionary can be accessed as dict[key]
=Values of a dictionary must be unique
~Values of a dictionary can be a mixture of letters and numbers
}

What will be the output of the following Python code? 
<br/><code>
count\=\{\}
count[(2,3,5)] \= 6
count[(5,3,2)] \= 8
count[(2,3)] \= 7
count[(5,3,2)] \= 3
tot \= 0
for f in count\:
&nbsp;&nbsp;tot\=tot+count[f]
print(len(count)+tot)
</code>
{
=25
=17
~19
~Tuples can't be made keys of a dictionary
}
 
What will be the output of the following Python code? 
<br/><code>
x\=\{\}
x[3]\=2
x[2]\=[3,4,5]
print(x[2][2])
</code>
{
~[3,4,5]
=5
~3
~An exception is thrown
}
 
If a is a dictionary with some key-value pairs, what does a.popitem() do? 
{
=Removes an arbitrary element
~Removes all the key-value pairs
~Removes the key-value pair for the key given as an argument
~Invalid method for dictionary
}

What will be the output of the following Python code snippet? 
<br/><code>
F\=\{1\:"X",2\:"Y",3\:"Z"\}
print(F.get(1,4))
</code>
{
~1
~4
=X
~Invalid syntax for get method
}
 
What will be the output of the following Python code? 
<br/><code>
F\=\{1\:"X",2\:"Y",3\:"Z"\}
for i in f\:
&nbsp;&nbsp;print(i,end\=" ")
</code>
{
=1 2 3
~'X' 'Y' 'Z'
~1 'X' 2 'Y' 3 'Z'
~Error, it should be\: for i in a.items()\:
}

What will be the output of the following Python code snippet? 
<br/><code>
numbers \= \{\}
letters \= \{\}
comb \= \{\}
numbers[2] \= 90
numbers[3] \= 9
letters[5] \= 'A'
comb['Numbers'] \= Numbers
comb['Letters'] \= letters
print(comb)
</code>
{
~Error, dictionary in a dictionary can't exist
~'Numbers'\: \{2\: 90, 3\: 9\}
=\{'Numbers'\: \{2\: 90, 3\: 9\}, 'Letters'\: \{5\: 'A'\}\}
~\{'Numbers'\: \{2\: 90\}, 'Letters'\: \{5\: 'A'\}\}
}

What will be the output of the following Python code snippet? 
<br/><code>
d\=\{1\:"X",2\:"Y",3\:"Z"\}
for a,b in d.items()\:
&nbsp;&nbsp;print(a,b,end\=" ")
</code>
{
=1 X 2 Y 3 Z
~1 2 3
~X Y Z
~1\:"X" 2\:"Y" 3\:"Z"
}

What will be the output of the following Python code snippet? 
<br/><code>
x \= \{\}
x[1] \= 1
x['1'] \= 2
x[1] \= x[1] + 1
count \= 0
for f in x\:
&nbsp;&nbsp;count +\= x[f]
print(count)
</code>
{
~1
~2
=4
~Error, the keys can't be a mixture of letters and numbers
}
 
What will be the output of the following Python code snippet? 
<br/><code>
f \= \{"jack"\:30,"john"\:35\}
print(list(f.keys()))
</code>
{
~["jack"\:30, "john"\:35]
=['jack', 'john']
~("jack", "john")
~("jack"\:30, "john"\:35)
}
 
What will be the output of the following Python code? 
<br/><code>
x\=\{2\:6,3\:4,4\:5\}
print(x.pop(4.9))
</code>
{
~3
=5
~4
~Too many arguments for pop() method
}
 
What will be the output of the following Python code snippet? 
<br/><code>
x \= \{\}
x[2] \= 2
x['2'] \= 3
x[2.0] \= 5
count \= 0
for f in x\:
&nbsp;&nbsp;count +\= x[f]
print(count)
</code>
{
=8
~6
~5
~An exception is thrown
}

What will be the output of the following Python code? 
<br/><code>
x\=\{f\: f*f for f in range(5)\}
print(x)
</code>
{
=\{0\: 0, 1\: 1, 2\: 4, 3\: 9, 4\: 16\}
~\{0\: 0, 1\: 1, 4\: 4, 9\: 9, 4\: 16\}
~\{0\: 0, 1\: 1, 2\: 4, 3\: 9, 4\: 16, 5\: 25\}
~Dictionary comprehension doesn't exist
}

What will be the output of the following Python code? 
<br/><code>
import collections
f\=dict()
f\=collections.defaultdict(lambda\: 7)
print(f[4])
</code>
{
~4
~0
=7
~An exception is thrown
}
 
What will be the output of the following Python code? 
<br/><code>
f\=\{\}
print(all(f))
</code>
{
~\{ \}
~False
=True
~An exception is thrown
}
 
8.  Suppose x \= \{"jack"\:30, "henry"\:35\}. To obtain the number of entries in dictionary which command do we use? 
{
~x.size()
=len(x)
~size(x)
~x.len()
}
 
What will be the output of the following Python code? 
<br/><code>
x\=\{f\: 'X' + str(f) for f in range(5)\}
print(x)
</code>
{
~An exception is thrown
=\{0\: 'X0', 1\: 'X1', 2\: 'X2', 3\: 'X3', 4\: 'X4'\}
~\{0\: 'X', 1\: 'X', 2\: 'X', 3\: 'X', 4\: 'X'\}
~\{0\: '0', 1\: '1', 2\: '2', 3\: '3', 4\: '4'\}
}

What will be the output of the following Python code snippet? 
<br/><code>
import collections
x\=collections.Counter([2,2,3,4,4,5,5,5])
print(x)
</code>
{
~\{2,3,4,5\}
~Counter(\{5, 4, 3, 2\})
=Counter(\{5\: 3, 2\: 2, 4\: 2, 3\: 1\})
~\{5\: 3, 2\: 3, 3\: 4, 3\: 2\}
}

What will be the output of the following Python code snippet? 
<br/><code>
import collections
x\=collections.Counter([2,2,3,4])
x\=collections.Counter([2,3,3,4,4,4])
print(x&y)
</code>
{
~Counter(\{2\: 15, 4\: 1, 3\: 1\})
=Counter(\{2\: 1, 3\: 1, 4\: 1\})
~Counter(\{4\: 2\})
~Counter(\{4\: 1\})
}

What will be the output of the following Python code? 
<br/><code>
x\=\{1\:"P,2\:"Q,3\:"R"\}
print(x.items())
</code>
{
=dict_items([(1, 'P'), (2, 'Q'), (3, 'R')])
~Syntax error
~dict_items([(1,2,3)])
~dict_items([('P'), ('Q'), ('R')])
}

What will be the output of the following Python code snippet? 
<br/><code>
d \= \{"jack"\:30, "henry"\:35\}
print(d)
</code>
{
~"jack", 30, 35, and "henry"
=\{'jack'\: 30, 'henry'\: 35\}
~"jack" and "henry"
~30 and 35
}

What will be the output of the following Python code snippet? 
<br/><code>
t \= \{1\:'J', 2\:'K, 3\:'L'\}
t \= \{\}
print(len(t))
</code>
{
=0
~None
~An exception is thrown
~3
}

What will be the output of the following Python code snippet? 
<br/><code>
x1 \= \{"jack"\:30, "john"\:35\}
x2 \= \{"jack"\:355, "john"\:35\}
print(x1 \=\= x2)
</code>
{
=True
~False
=None
=Error
}
 
What will be the output of the following Python code snippet? 
<br/><code>
f \= \{"peter"\:50, "henry"\:55\}
print(f["peter"])
</code>
{
~55
=50
~peter
~henry
}
 
What will be the output of the following Python code? 
<br/><code>
x\=\{1\:"P",2\:"Q",3\:"R"\}
print(x.get(7,6))
</code>
{
~Error, invalid syntax
=P
=7
~6
}
 
What will be the output of the following Python code? 
<br/><code>
f\=dict()
f[1]
</code>
{
~An exception is thrown since the dictionary is empty
~' '
~1
=Error
}
 
What will be the output of the following Python code snippet? 
<br/><code>
x1 \= \{"jack"\:30, "john"\:35\}
x2 \= \{"jack"\:355, "john"\:35\}
print(x1 > x2)
</code>
{
~True
~False
=Error
~None
}
 
Which of the following isn't true about dictionary keys? 
{
~More than one key isn't allowed
~Keys must be immutable
=Keys must be integers
~When duplicate keys encountered, the last assignment wins
}
 
What will be the output of the following Python code snippet? 
<br/><code>
import collections
y\=collections.Counter([3,3,4,5,5,5])
print(y.most_common(2))
</code>
{
~Counter(\{5\: 4, 4\: 4, 3\: 2\})
~\{3\:2\}
=[(5, 3), (3, 2)]
~\{4\:3\}
}
 
What will be the output of the following Python code? 
<br/><code>
x\=\{1\:"P",2\:"Q",3\:"R"\}
y\=x.copy()
y[2]\="S"
print(x)
</code>
{
=\{1\: 'P', 2\: 'Q', 3\: 'R'\}
~\{1\: 'P', 2\: 'S', 3\: 'R'\}
~Error, copy() method doesn't exist for dictionaries
~"None" is printed
}

What will be the output of the following Python code snippet? 
<br/><code>
x \= \{\}
x['x']\=2
x['y']\=[3,4,5]
print(x)
</code>
{
=\{'x'\: 2, 'y'\: [3, 4, 5]\}
~Exception is thrown
~\{'x'\: [2], 'y'\: 3\}
~\{'y'\: [2], 'x'\: [3]\}
}

What will be the output of the following Python code? 
<br/><code>
x\=\{'Y'\:3,'X'\:5,'Z'\:7\}
print(sorted(x))
</code>
{
=['X', 'Y', 'Z']
~['Y','Z','X']
~[3,5,7]
~[7,5,3]
}

Which of these about a dictionary is false? 
{
~The values of a dictionary can be accessed using keys
=The keys of a dictionary can be accessed using values
~Dictionaries aren't ordered
~Dictionaries are mutable
}

What will be the output of the following Python code snippet? 
<br/><code>
f\=\{1\:"X",2\:"Y",3\:"Z"\}
print(f.setdefault(3))
</code>
{
~\{1\: 'X', 2\: 'Y', 3\: 'Z'\}
=Z
~\{1\: 3, 2\: 3, 3\: 3\}
~No method called setdefault() exists for dictionary
}
 
What will be the output of the following Python code snippet? 
<br/><code>
t \= \{1\:'J', 2\:'K', 3\:'L'\}
del t[2]
t[2] \= 'M'
del t[3]
print(len(t))
</code>
{
~Error as the key-value pair of 1\:'A' is already deleted
~0
=2
~1
}
 
Which of the following is not a declaration of the dictionary? 
{
~\{1\: 'A', 2\: 'B'\}
~dict([[1,"A"],[2,"B"]])
=\{1,"A",2"B"\}
~\{ \}
}
 
Which of the following statements create a dictionary? 
{
~d \= \{\}
~d \= \{"jack"\:30, "peter"\:35\}
~d \= \{30\:"jack", 35\:"peter"\}
=All of the mentioned
}
 
What will be the output of the following Python code snippet? 
<br/><code>
x \= \{"jack"\:40, "henry"\:45\}
print("jack" in x)
</code>
{
=True
~False
~None
~Error
}

What will be the output of the following Python code? 
<br/><code>
x\=\{2\:6,3\:4,4\:5\}
x.pop(3)
print(x)
</code>
{
~\{2\: 6\}
=\{2\: 6, 4\: 5\}
~Error, syntax error for pop() method
~\{2\: 6, 3\: 4\}
}

What will be the output of the following Python code? 
<br/><code>
f\=\{\}
print(f.fromkeys([2,3,4],"check"))
</code>
{
~Syntax error
~"check"
=\{2\: 'check', 3\: 'check', 4\: 'check'\}
~\{2\:None,3\:None,4\:None\}
}

Suppose x \= \{"jack"\:30, "henry"\:35\}, to delete the entry for "jack" what command do we use? 
{
~x.delete("jack"\:30)
~x.delete("jack")
=del x["jack"]
~del x("jack"\:30)
}
 
If b is a dictionary, what does any(b) do? 
{
=Returns True if any key of the dictionary is true
~Returns False if dictionary is empty
~Returns True if all keys of the dictionary are true
~Method any() doesn't exist for dictionary
}