// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: f0274604-a36d-4cb9-bd23-dee20b618a3c
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
names1 \= ['Bertha',
'Davida', 'Mopnika']
if 'bertha' in names1\:
&nbsp;&nbsp;print(1)
else\:
&nbsp;print(2)
</code>
{
=1
~3
~2
~None
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: dc4fc60f-cbb0-4071-a3b2-a0da3730cbbb
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
x\=[2,3,4]
y\=x.append(5)
print(x)
print(y)
</code>
{
~[2,3,4,5]<br/>[2,3,4,5]
=[2,3,4,5]<br/>None
~[2,3,4,5]<br/>[2,3,4,5]
~Syntax error
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 031d26f2-c793-4736-8801-4eaba6773dc3
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
f\= [[a,a+2,a+3] for a in range(0,3)]
</code>
{
~[[1, 2, 3], [4, 5, 6], [7, 8, 9]]
=[[0, 2, 3], [1, 3, 4], [2, 4, 5]]
~[1, 2, 3, 4, 5, 6, 7, 8, 9]
~[0, 1, 2, 1, 2, 3, 2, 3, 4]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 615caa47-6282-41b0-9e28-78d27e0fd03e
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
m \= [[2,3,4,5],
&nbsp;&nbsp;[5,6,7,8],
&nbsp;&nbsp;[9,10,11,12],
&nbsp;&nbsp;[13,14,15,16]]
for i in range(0,4)\:
&nbsp;&nbsp;print(m[i][1], end \= " ")
</code>
{
~2 3 4 5 
~5 6 7 8
~2 3 9 15
=3 6 10 14
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: d422e20a-4bf3-4b3b-914a-2642f384869c
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
a\=[[2],[3]]
print(" ".join(list(map(str,a))))
</code>
{
=[2] [3]
~[49] [50]
~[[2]] [[3]]
~Syntax error
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 000e2aa4-c1d8-45d7-a743-c19986011e23
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
v \= [[4, 5, 6, 2 ], [44, 7, 2, 3]]
for row in v\:
&nbsp;&nbsp;row.sort()
&nbsp;&nbsp;for element in row\:
&nbsp;&nbsp;&nbsp;&nbsp;print(element, end \= " ")
&nbsp;&nbsp;print()
</code>
{
~The program prints two rows 3 5 6 2 followed by 44 7 2 3
~The program prints on row 3 6 5 2 44 7 3 2
=The program prints two rows 2 4 5 6 followed by 2 3 7 44
~The program prints two rows 3 6 5 2 followed by 44 6 2 3
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 49ac6505-07e5-42f8-b083-de0c87de3e5a
// Python versions: 3.10 3.11
What will be the output of the following Python code? 
<br/><code>
p \= [1, 3, 5, 7, 7, 1]
q\=p[0]
a\=0
for a in range(1, len(p))\:
&nbsp;&nbsp;if p[a] > q\:
&nbsp;&nbsp;&nbsp;&nbsp;q \= p[a]
&nbsp;&nbsp;&nbsp;&nbsp;q\= A
print(q)
</code>
{
~5
~3
=4
~0
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 851e6f1e-613e-4a94-858f-210c619f4301
// Python versions: 3.10 3.11
 
What will be the output of the following code? 
<br/><code>
x\=[12,48,15]
x.append([77])
x.extend([40,60])
print(x)
</code>
{
~[12,48,15, [77]40,60]
=[12, 48, 15, [77], 40, 60]
~[12, 48, 15, 77,[ 40, 60]]
~[12,48,15,77,[ 40, 60]]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: b93463d7-7126-4d87-829c-cbc3561398dc
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
my_List \= [2, 6, 6, 6, 6, 2]
max \= my_List[0]
indexOfMax \= 0
for i in range(2, len(my_List))\:
&nbsp;&nbsp;if my_List[i] > max\:
&nbsp;&nbsp;&nbsp;&nbsp;max \= my_List[i]
&nbsp;&nbsp;&nbsp;&nbsp;indexOfMax \= i
print(indexOfMax)
</code>
{
~1
=2
~3
~4
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: cee15b3d-c025-4a43-82e5-2b57c65f7d73
// Python versions: 3.10 3.11
 
Which of the following commands will create a list? 
{
~list1 \= []
~list1 \= list()
~list1 \= list([1, 2, 3])
=all of the mentioned
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 8b990242-91a3-4331-bacc-f621794afcc8
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
p\="python"
q\=list((f.upper(),len(f)) for f in p)
print(q)
</code>
{
~[('P', 0), ('Y', 0), ('T', 0), ('H', 0), ('O', 0), ('N', 0)]
~[('PYTHON', 5)]
=[('P', 1), ('Y', 1), ('T', 1), ('H', 1), ('O', 1), ('N', 1)]
~Syntax error
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: ce6b5f1a-c31b-463c-b332-691f7c501a3b
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
x \= [[[2,3],[4,5]], [[6,7], [8,9]]]
print(x[1][0][0])
</code>
{
~2
~5
~4
=6
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 3f956f4f-9999-415a-97f4-36138d9742d2
// Python versions: 3.10 3.11
 
What will be the output of the following code? 
<br/><code>
values \= [[4, 5, 6, 2], [44, 7, 2, 3]]
x \= values[0][0]
for row in range(0, len(values))\:
&nbsp;&nbsp;for column in range(0, len(values[row]))\:
&nbsp;&nbsp;&nbsp;&nbsp;if x < values[row][column]\:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x \= values[row][column]
print(x)
</code>
{
~5
~6
=44
~7
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 8671db6a-2151-43b2-92ec-2db66f26e741
// Python versions: 3.10 3.11
 
What will be the output of the following code? 
<br/><code>
animals \= ['Monkey', 'Tiger', 'Lion']
animals1 \= animals
animals2 \= animals[\:]
animals1[1] \= 'Fox'
animals2[2] \= 'Deer'
print(animals)
</code>
{
~['Monkey', 'Fox', 'Deer']
=['Monkey', 'Fox', 'Lion']
~['Monkey', 'Fox', 'Tiger']
~['Monkey', 'Tiger', 'Lion']
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 601c4a49-946a-4acc-9062-bcbd4a22bc65
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
x\=[[2,3],[4,5]]
print(sum(x,[]))
</code>
{
~[[3],[8]]
=[2, 3, 4, 5]
~Error
~[14]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 6717102c-4502-4402-a893-2775abc21fbe
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
def change(var, lst)\:
&nbsp;&nbsp;var \= 1
&nbsp;&nbsp;lst[0] \= 55
x \= 4
y \= [2,3,4]
change(x,y)
print(x)
print(y)
</code>
{
=4<br/>[55, 3, 4]
~4<br/>[2, 3, 4]
~4<br/>[2, 3, 55]
~2<br/>[55, 3, 4]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: ef5cb500-4879-4b94-9451-cc7d67d968c1
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
x\=[2,33,60,[88]]
y\=list(x)
x[3][0]\=90
x[1]\=35
print(y)
</code>
{
~[20,33,60,[90]]
~[20, 33, 60, [88]]
=[20, 33, 60, [90]]
~[20,33,60,[88]]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 7c9bfb06-e666-472a-9ed1-8390266ce6f7
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
x \= y\= [2,4, 6]
y [2] \= 5
print(x)
</code>
{
~[1, 4, 3]
~[2, 4, 6, 5]
=[ 2, 4, 5]
~[ 2, 4, 6]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 32fc4b88-4575-40a5-84cb-dc861919c3f1
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
def x(list)\:
&nbsp;&nbsp;y \= list[0]
&nbsp;&nbsp;for e in list\:
&nbsp;&nbsp;&nbsp;&nbsp;if y < e\: y \= e
&nbsp;&nbsp;&nbsp;&nbsp;return y
values \= [[4, 5, 6, 2], [44, 7, 2, 3]]
for row in values\:
&nbsp;&nbsp;print(x(row), end \= " ")
</code>
{
~3 44
=4 44
~5 44
~6 7
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: c129ab90-46b4-4970-9e89-0a8767ba131b
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
m\=[4,5,7,2,3]
m[1\:2]\=[8,9]
print(m)
</code>
{
=[4, 8, 9, 7, 2, 3]
~Syntax error
=[4,[8,9],5,2,3]
=[4,5,6,7,8]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 7df72dbd-a77d-464e-a166-0dd8db35de45
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
x\= [2, 3, 4, 5, 6]
for y in range(1, 5)\:
&nbsp;&nbsp;x[y-1] \= x[y]
for y in range(0, 5)\:
&nbsp;&nbsp;print(x[y],end " ")
</code>
{
~6 6 2 3 4
~6 2 3 4 5
~3 4 5 6 2
=3 4 5 6 6
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 71a6bbab-bb91-4af7-9406-c4df63cf585f
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
def x(values)\:
&nbsp;&nbsp;values[0] \= 45
v \= [2, 4, 6]
x(v)
print(v)
</code>
{
~[ 45, 6, 4,]
~[45, 4]
~[4, 6, 45 ]
=[45, 4, 6]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 59f6f65b-331c-4cbb-a838-f50f4353f033
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
x\=170
y\=sum(list(map(int,str(x))))
print(y)
</code>
{
~561
~12
=8
~Syntax error
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 0c7ad8a7-7ad9-4a5a-b285-db667862dc5c
// Python versions: 3.10 3.11
 
What will be the output of the following code? 
<br/><code>
values \= [[4, 5, 6, 2], [44, 7, 2, 3]]
x \= values[0][0]
for lst in values\:
&nbsp;&nbsp;for element in lst\:
&nbsp;&nbsp;&nbsp;&nbsp;if x > element\:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x \= element
print(x)
</code>
{
=2
~3
~6
~7
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 966ef346-e3c7-433a-813b-9d182d1f9a7d
// Python versions: 3.10 3.11
What is the maximum number of elements List can contain in Python? 
{
~10 million items
~10 million on 32-bit system and 20 million on 64-bit system
=There is no limit
~20 million items
~Another limit
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: b446ab3c-e120-436f-8a6e-cd610af17917
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
p \= [[2,3], [4, 2.5], [0.7, 0.7]]
p.sort()
print(p)
</code>
{
~[[4, 2.5], [2, 3], [0.7, 0.7]]
=[[0.7, 0.7], [2, 3], [4, 2.5]]
~[[0.7, 0.7], [4, 2.5], [2, 3]]
~[[2, 3], [4, 2.5], [0.7, 0.7]]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: f410dc4d-e507-48b3-9eaf-a0cd33c1c67e
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
p\=[2,3,4,5]
q\=[sum(p[0\:x+1]) for x in range(0,len(p))]
print(q)
</code>
{
~14
~[2,3,5,7]
~5
=[2, 5, 9, 14]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 31918eff-d151-4a1c-ac9f-2c713a49fe46
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
numbers \= [2, 4, 6]
numbers.append([1,2,3,4])
print(len(numbers))
</code>
{
~6
~5
=4
~22
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 6d7890d8-3ad8-41f7-851d-61275b347839
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
def increment_items(L, increment)\:
&nbsp;&nbsp;i \= 0
&nbsp;&nbsp;while i < len(L)\:
&nbsp;&nbsp;&nbsp;&nbsp;L[i] \= L[i] + increment
&nbsp;&nbsp;&nbsp;&nbsp;i \= i + 1
values \= [2, 4, 6]
print(increment_items(values, 2))
print(values)
</code>
{
=None [4, 6, 8]
~[4,6,8] None
~[1, 2, 3] [4,5,6]
~None [1, 2, 3]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 4560421a-ceec-44cb-824d-5ca6557afe01
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
x\=[12,50,5]
y\=x.copy()
y is x
</code>
{
~True
=False
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 47f79bff-f293-45f5-ab84-69410d5f3626
// Python versions: 3.10 3.11
 
What will be the output of the following code? 
<br/><code>
&gt;&gt;&gt;names \= ['Ajoy', 'Jaya', 'Champion', 'Dhiman']
&gt;&gt;&gt;print (names[-1][-1])
</code>
{
~A 
~Dhiman
~Error
=n
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 2f19640a-1359-4608-bf78-fb69c2fff42f
// Python versions: 3.10 3.11
 
What will be the output of the following code? 
<br/><code>
def addItem(list1)\:
&nbsp;&nbsp;list1 +\= [1]
my_list \= [2, 4, 6, 8]
addItem(my_list)
print(len(my_list))
</code>
{
=5
~1
~4
~8
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 4b0b7eb7-6f99-4fc2-875d-26ecb5917904
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
x\=[2,3,4,5]
y\=[sum(x[0\:a+1]) for a in range(0,len(x))]
print(y)
</code>
{
~14
~[2,5,7,9]
=[2, 5, 9, 14]
~[2,3,9,14]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 273ed32a-f2e4-48ba-9403-0f4263d3c511
// Python versions: 3.10 3.11
How many elements are in a? 
<br/><code>
x \= [[a, b] for a in range(0, 2) for b in range(0, 2)]
</code>
{
~[[0, 1], [0, 2], [2, 0], [0, 1]]
=[[0, 0], [0, 1], [1, 0], [1, 1]]
~[[0, 10], [0, 2], [0, 3], [0, 4]]
~None
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 442223dd-8c16-42e2-9ad7-7a966d511f8f
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
x\=list((50,)*4)
print((50)*4)
print(x)
</code>
{
~200<br/>[(50),(50),(50),(50)] 
~(50,50,50,50)<br/>[50,50,50,50] 
~200<br/>[50,50,50,50] 
~Syntax error
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: dce85902-8acb-4d4c-8998-04af5efca76a
// Python versions: 3.10 3.11
Suppose list1 is [3, 4, 15, 15,  25, 15], what is list1.index(15)? 
{
~0
~5
=2
~3
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 316fcb38-6dfd-40f1-9947-338f3b933b91
// Python versions: 3.10 3.11
 
Suppose list1 \= [0.5 * x for x in range(0, 5)], list1 is\: 
{
~[1.0, 0.5, 0.0, 1.5, 2.0]
=[0.0, 0.5, 1.0, 1.5, 2.0]
~[2.0, 1.5, 1.0, 0.5, 0.0]
~[0.1, 0.2, 0.3, 0.4, 0.5]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: b6f0fdd8-fb4a-4dc7-b305-fac5663ca20f
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
x\="p@q@r@s"
p\=list(x.parition("@"))
print(p)
q\=list(x.split("@",3))
print(q)
</code>
{
~['p','q','r','s']<br/>['p','q','r','s']
~['p','@','q','@','r','@','s']<br/>['p','q','r','s']
=['p','@','q@r@s']<br/>['p','q','r','s']
~['p','@','q@r@s']<br/>['p','@','q','@','r','@','s']
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: e464abe9-a380-4237-aedc-d1167f4a5313
// Python versions: 3.10 3.11
 
What will be the output of the following code? 
<br/><code>
list1 \= [8, 7, 6, 5]
list2 \= [1, 2, 3, 4]
print(len(list1 + list2))
</code>
{
~2
=8
~4
~6
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 201bf01e-89a6-4c00-8c34-358e0582b3e1
// Python versions: 3.10 3.11
 
What will be the output of the following code? 
<br/><code>
names1 \= ['Ajoy', 'Jaya', 'Champoin', 'Dhiman']
names2 \= names1
names3 \= names1[\:]
names2[0] \= 'Alicia'
names3[1] \= 'Yen'
sum \= 0
for ls in (names1, names2, names3)\:
&nbsp;&nbsp;if ls[0] \=\= 'Alicia'\:
&nbsp;&nbsp;&nbsp;&nbsp;sum +\= 1
&nbsp;&nbsp;if ls[1] \=\= 'Yen'\:
&nbsp;&nbsp;&nbsp;&nbsp;sum +\= 10
print(sum)
</code>
{
~10
~12
=2
~8
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 775e006e-3a82-4373-8766-be8587749ee9
// Python versions: 3.10 3.11
 
What will be the output of the following code? 
<br/><code>
x\=[[]]*3
x[1].append(5)
print(x)
</code>
{
~Syntax error
~[[5], [], []]
=[[5], [5], [5]]
~[[],5, [], []]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: deb25e02-676f-499f-9073-617a564de939
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
my_List \= [1, 2, 3, 4, 5]
for i in range(1, 5)\:
&nbsp;&nbsp;my_List[i - 1] \= my_List[i]
&nbsp;&nbsp;for i in range(0, 5)\:
&nbsp;&nbsp;&nbsp;&nbsp;print(my_List[i], end \= " ")
</code>
{
~2 2 3 4 3 3 6 3 3 4 5 2 3 4 4 5 4 5 5
~2 2 3 4 3 3 4 5 4 4 5 2 3 4 2 3 3 4 5
=2 2 3 4 5 2 3 3 4 5 2 3 4 4 5 2 3 4 5 5
~2 2 2 3 4 5 2 2 2 2 3 4 5 3 4 5 2 3 4 5
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 5c1c4d5b-e79a-4863-8ce6-60e3993568fa
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
&gt;&gt;&gt;"Welcome to Python".split()
</code>
{
~("Welcome", "to", "Python")
~\{"Welcome", "to", "Python"\}
=['Welcome', 'to', 'Python']
~"Welcome", "to", "Python"
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: f53a2373-f07f-414c-9d88-7589ddaf76e9
// Python versions: 3.10 3.11
Suppose list1 is [4, 2, 2, 4, 5, 2, 1, 0], Which of the following is correct syntax for slicing operation? 
{
~print(list1[0])
~print(list1[\:2])
~print(list1[\:-2])
=all of the mentioned
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: b46c14bc-a8f9-405e-9ba1-6a3fcc90404d
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
list1 \= [2, 5]
list2 \= list1
list1[0] \= 3
print(list2)
</code>
{
~[2, 5]
~[5, 2]
=[3, 5]
~[5, 3]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 23da2d66-355b-4da4-b419-6b5bc055241e
// Python versions: 3.10 3.11
 
What will be the output of the following code? 
<br/><code>
import copy
x\=[20,33,66,[80]]
y\=copy.deepcopy(x)
x[3][0]\=90
x[1]\=35
print(y)
</code>
{
~[20,33,60,[90]] 
~[20,33,60,[80]]
=[20, 33, 60, [80]]
~[20, 33, 60, [90]]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: febc629e-5477-4276-9cde-ba10950ab594
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
n \= ['One', 'Two', 'Three']
for a, x in enumerate(n)\:
&nbsp;&nbsp;print('\{\}\: \{\}'.format(a, x),end\=" ")
</code>
{
~1\: 2\: 3\:
~Exception is thrown
~One Two Three
=0\: One 1\: Two 2\: Three
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 1ada9324-e900-4035-8a55-26516c49821e
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
word1\="Pen"
word2\="Pen"
list1\=[0,1,2]
list2\=[0,1,2]
print(word1 is word2)
print(list1 is list2)
</code>
{
~True<br/>True
~False<br/>True
~False<br/>False
=True<br/>False
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 775f4c95-68d3-41fb-b941-61c5d83fbc0d
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
def unpack(p,q,r,s)\:
&nbsp;&nbsp;print(p+s)
a \= [2,3,4,5]
unpack(*a)
</code>
{
~Error
=[2,5]
=[7]
=7
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: b1c6469d-6664-4521-bb2c-b6a8030b13f3
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
def f(i, values \= [])\:
&nbsp;&nbsp;values.append(i)
&nbsp;&nbsp;return values
f(2)
f(4)
v \= f(6)
print(v)
</code>
{
~['2, 4, 6']
~[2] [ 2, 4] [2, 4, 6]
=[2, 4, 6]
~[2] [4] [6]
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 27b5a47a-0901-405f-855c-d6668389fd2b
// Python versions: 3.10 3.11
 
What will be the output of the following code? 
<br/><code>
q\=[5,6,7,8]
p\=list(filter(lambda x\:x%2,q))
print(p)
</code>
{
~[5,8]
~[ ]
=[5, 7]
~Invalid arguments for filter function
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: bfc83799-deca-4799-8e39-2d12bd33dd29
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
d \= [[[2, 3], [4,5]], [[6, 7], [8,9]]]
def abc(y)\:
&nbsp;&nbsp;x \= y[0][0]
&nbsp;&nbsp;for row in y\:
&nbsp;&nbsp;&nbsp;&nbsp;for element in row\:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if x < element\: x \= element
&nbsp;&nbsp;return x
print(abc(d[0]))
</code>
{
~2
~4
=5
~6
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 95eacdd3-55b9-419f-bc0c-de597901966e
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
list1 \= [12, 3, 25]
list2 \= [12, 3, 2]
print(list1&gt;list2)
</code>
{
~False
=True
~Error
~None
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: edc1f4da-6012-4623-81dc-0d191419e9d9
// Python versions: 3.10 3.11
 
What will be the output of the following code? 
<br/><code>
names1 \= ['Bertha', 'Davida', 'Monika']
names2 \= [name.lower() for name in
names1]
print(names2[2][0])
</code>
{
~b
=m
~d
~None
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: d73c06f1-81da-459c-bf86-c6062cc89f65
// Python versions: 3.10 3.11
 
To which of the following the "in" operator can be used to check if an item is in it? 
{
~Dictionary
~Set
~Lists
=All of the above
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 018615ca-279b-4d6c-8963-bfaa24752acb
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
print(list(zip((2,3,4),('p'),('aaa','bbb'))))
print(list(zip((3,5),('q','r'),('bb','aa'))))
</code>
{
~[(2,3,4),('p'),('aaa','bbb')]<br/>[(2,4),('q','r'),('bb','aa')]
~[(2, 'p', 'aaa'),(3,' ','bbb'),(4,' ',' ')]<br/>[(3, 'q', 'bb'), (5, 'r', 'aa')]
=[(2, 'p', 'aaa')]<br/>[(3, 'q', 'bb'), (5, 'r', 'aa')]
~Syntax error
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 78980a66-0ab7-43a0-8105-13750f7b707f
// Python versions: 3.10 3.11
 
What will be the output of the following code? 
<br/><code>
def example(L)\:
&nbsp;&nbsp;''' (list) -&gt; list
&nbsp;&nbsp;'''
&nbsp;&nbsp;i \= 0
&nbsp;&nbsp;result \= []
&nbsp;&nbsp;while i &lt; len(L)\:
&nbsp;&nbsp;&nbsp;&nbsp;result.append(L[i])
&nbsp;&nbsp;&nbsp;&nbsp;i \= i + 3
&nbsp;&nbsp;return result
</code>
{
=Return a list containing every third item from L starting at index 0
~Return an empty list
~Return a list containing every third index from L starting at index 0
~Return a list containing the items from L starting from index 0, omitting every third item
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 21baafc2-7c97-45c6-888b-0ce349c03f49
// Python versions: 3.10 3.11
What will be the output of the following code? 
<br/><code>
x\=["Mango","Nail","Ox"]
x.sort(key\=len)
print(x)
</code>
{
~['Mango', 'Nail', 'Ox']
=['Ox', 'Nail', 'Mango']
~['Ox', 'Mango', 'Nail' ]
~Invalid syntax for sort()
}

// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: 73fb998d-e920-4608-a895-3bb32f258674
// Python versions: 3.10 3.11
 
What will be the output of the following code? 
<br/><code>
fruits \= ['mango', 'apple', 'banana', 'cherry']
fruits.insert(fruits.index('apple'),'berry')
print(fruits)
</code>
{
=['mango', 'berry', 'apple', 'banana', 'cherry']
~['mango', 'berry', 'banana', 'cherry']
~['mango', 'apple', 'berry', 'banana', 'cherry']
~['mango', 'apple', 'berry', 'cherry' 'banana' ]
}
// Origin: https://www.w3resource.com
// License: Creative Commons Attribution 4.0 International
// ID: c9a4075a-f781-483e-9c76-c48c08e4aab0
// Python versions: 3.10 3.11
}
